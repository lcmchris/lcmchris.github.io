---
title: "Breaking down the frontend ecosystem"
tags: Writing
first: 2024-12-07
last: 2024-12-07
uuid: 9ed43585-b386-4e2e-940c-639dd0e0cbcb
---

# Reading up on how frontend really works

There's so many frameworks, paradigms these days that keeping track of how frontend works is quite tricky.
It's very easy to get started on this frameworks. Boilerplates makes this especially easy. Running:
`npm create vite@latest my-vue-app -- --template react` creates an application in a flash! This makes getting started on a website or web application extremely easy. What this doesn't do is teach you how things work under the hood. The ease of usage has made all the tech underneath seem like magic. It's good in a sense that it makes you work quicker (which is the main purpose of all tools) but bad in the sense that it abstracts all the details out. This makes choosing tools and paradigms you use much less obvious.

As someone who did not go through computer science this knowledge was never with me but I'm determined to get to the bottom of it.

## What does a website mean?

What is a browser? A browser is application that renders a websites. At its core, it works by fetching from a webserver via HTTP request, a html file. It then uses this to paint a page. This is what happens when you access an URL. A URL points to a particular server via DNS. Remember when you originally purchase a domain from GoDaddy? GoDaddy gives you access to a domain and ability to change the DNS records. Using this and modifying the A record, you can redirect a url to a webserver ip.

Simplified

URL -> DNS -> Webserver ip

Key point. All you need is to send html files to client browsers. JS and Css are additional sauce.

## Routing

## How does bundling work? Transpliers, Minifiers and Uglifiers

#### ES modules!

## Frontend Infrastructure

https://vercel.com/docs/projects/domains
https://en.wikipedia.org/wiki/Root_name_server
